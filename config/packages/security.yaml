security:

    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: id

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            webauthn:
                registration:
                    enabled: true
                    routes:
                        options_path: '/webauthn/register/options'
                        result_path: '/webauthn/register'
                secured_rp_ids:
                    - 'localhost'
                authentication:
                    routes:
                        options_path: '/webauthn/login/options'
                        result_path: '/webauthn/login'

            provider: app_user_provider
            custom_authenticators:
                - App\Security\CustomAuthenticator
            logout:
                path: app_logout
                target: app_login
            #form_login:
            #    login_path: app_login
            #    check_path: app_login

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/webauthn/*,  roles: PUBLIC_ACCESS }
        - { path: ^/register,    roles: PUBLIC_ACCESS }
        - { path: ^/login,       roles: PUBLIC_ACCESS }
        - { path: ^/logout,      roles: PUBLIC_ACCESS }

        - { path: ^/profile,  roles: IS_AUTHENTICATED_FULLY } # We protect all the /profile path

        #- { path: ^/, roles: IS_USER_VERIFIED }
        - { path: ^/, roles: ROLE_USER }
